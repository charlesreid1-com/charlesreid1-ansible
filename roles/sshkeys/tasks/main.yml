---
# tasks file for sshkeys


###########################
# root: create ssh keys


- name: Create .ssh directory
  become: yes
  file:
    path: /root/.ssh
    state: directory

- name: Check if a root user SSH key already exists
  become: yes
  stat:
    path: "/root/.ssh/id_rsa"
  register: root_key_check

- name: "Generate SSH keys for root user ({{ ssh_key_email }})"
  become: yes
  shell: "ssh-keygen -t rsa -N '' -b 4096 -f /root/.ssh/id_rsa -q -C \"{{ ssh_key_email }}\""
  when:
    - "not root_key_check.stat.exists"

- name: Set permissions on .ssh directory
  become: yes
  file:
    path: /root/.ssh
    state: directory
    recurse: yes
    mode: "u+rwx,g-wx,o-rwx"
  when:
    - "not root_key_check.stat.exists"



###############################
# root: copy authorized keys


- name: Copy (overwrite) the authorized keys file into the root .ssh directory
  become: yes
  copy:
    src: files/authorized_keys
    dest: /root/.ssh/authorized_keys
    mode: 0600
    force: yes


#####################
# nonroot user

- name: Create .ssh directory
  become: yes
  become_user: "{{ username }}"
  file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Check if a nonroot user SSH key already exists
  become: yes
  become_user: "{{ username }}"
  stat:
    path: "/home/{{ username }}/.ssh/id_rsa"
  register: nonroot_key_check

- name: "Generate SSH keys for nonroot user {{ username }} ({{ ssh_key_email }})"
  become: yes
  become_user: "{{ username }}"
  shell: "ssh-keygen -t rsa -N '' -b 4096 -f /home/{{ username }}/.ssh/id_rsa -q -C \"{{ ssh_key_email }}\""
  when:
    - "not nonroot_key_check.stat.exists"

- name: Set permissions on .ssh directory
  become: yes
  become_user: "{{ username }}"
  file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    recurse: yes
    mode: "u+rwx,g-wx,o-rwx"
    owner: "{{ username }}"
    group: "{{ username }}"



##################################
# nonroot: copy authorized keys

- name: Copy the authorized keys file into the nonroot user .ssh directory
  become: yes
  become_user: "{{ username }}"
  copy:
    src: files/authorized_keys
    dest: "/home/{{ username }}/.ssh/authorized_keys"
    mode: 0600
    force: yes
    owner: "{{ username }}"
    group: "{{ username }}"

