---
# tasks file for sshkeys


###########################
# root: create ssh keys


- name: Create root .ssh directory
  become: yes
  file:
    path: /root/.ssh
    state: directory
  tags:
    - ssh
    - root-ssh

- name: Check if a root user SSH key already exists
  become: yes
  stat:
    path: "/root/.ssh/id_rsa"
  register: root_key_check
  tags:
    - ssh
    - root-ssh

- name: "Generate SSH keys for root user ({{ ssh_key_email }})"
  become: yes
  shell: "ssh-keygen -t rsa -N '' -b 4096 -f /root/.ssh/id_rsa -q -C \"{{ ssh_key_email }}\""
  when:
    - "not root_key_check.stat.exists"
  tags:
    - ssh
    - root-ssh

- name: Set permissions on root .ssh directory
  become: yes
  file:
    path: /root/.ssh
    state: directory
    recurse: yes
    mode: "u+rwx,g-wx,o-rwx"
  when:
    - "not root_key_check.stat.exists"
  tags:
    - ssh
    - root-ssh



#####################
# nonroot user

- name: Create nonroot .ssh directory
  become: yes
  become_user: "{{ username }}"
  file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
  tags:
    - ssh
    - nonroot-ssh

- name: Check if a nonroot user SSH key already exists
  become: yes
  become_user: "{{ username }}"
  stat:
    path: "/home/{{ username }}/.ssh/id_rsa"
  register: nonroot_key_check
  tags:
    - ssh
    - nonroot-ssh

- name: "Generate SSH keys for nonroot user {{ username }} ({{ ssh_key_email }})"
  become: yes
  become_user: "{{ username }}"
  shell: "ssh-keygen -t rsa -N '' -b 4096 -f /home/{{ username }}/.ssh/id_rsa -q -C \"{{ ssh_key_email }}\""
  when:
    - "not nonroot_key_check.stat.exists"
  tags:
    - ssh
    - nonroot-ssh

- name: Set permissions on nonroot .ssh directory
  become: yes
  become_user: "{{ username }}"
  file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    recurse: yes
    mode: "u+rwx,g-wx,o-rwx"
    owner: "{{ username }}"
    group: "{{ username }}"
  tags:
    - ssh
    - nonroot-ssh



##################################
# nonroot: copy authorized keys

- name: Copy the authorized keys file into the nonroot user .ssh directory
  become: yes
  become_user: "{{ username }}"
  copy:
    src: authorized_keys
    dest: "/home/{{ username }}/.ssh/authorized_keys"
    mode: 0600
    force: yes
    owner: "{{ username }}"
    group: "{{ username }}"
  tags:
    - ssh
    - nonroot-ssh




##################################
# nonroot: copy ssh configuration

- name: Copy the ssh configuration to the nonroot user .ssh directory
  become: yes
  become_user: "{{ username }}"
  copy:
    src: config
    dest: "/home/{{ username }}/.ssh/config"
    mode: 0600
    force: yes
    owner: "{{ username }}"
    group: "{{ username }}"
  tags:
    - ssh
    - nonroot-ssh



##################################
# system ssh configuration

- name: Ensure SSH daemon is running.
  service:
    name: "ssh"
    state: "started"

- name: Update SSH configuration to be more secure.
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: 'sshd -T -f %s'
    mode: 0644
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^PermitRootLogin"
      line: "PermitRootLogin no"
    - regexp: "^Port"
      line: "Port {{ ssh_port }}"
    - regexp: "^UseDNS"
      line: "UseDNS no"
    - regexp: "^PermitEmptyPasswords"
      line: "PermitEmptyPasswords no"
    - regexp: "^ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication no"
    - regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication no"
    - regexp: "^X11Forwarding"
      line: "X11Forwarding no"
  notify: restart ssh
  tags:
    - ssh
    - root-ssh


## 
## - name: Automatically accept new SSH keys
##   become: yes
##   become_user: "{{ username }}"
##   command: "echo 'StrictHostKeyChecking=accept-new' > ~/.ssh/config"
##   tags:
##     - nonroot-ssh
