---
# apollo bot flock
# 
# Process:
# - clone repo
# - install api keys
# - install bot keys
# - install startup service
# - enable startup service
# - start startup service


# #####################################
# CLONE APOLLO SPACE JUNK


- name: Check if apollo repo is already cloned
  stat:
    path: "{{ apollo_path }}"
  register: apollo_clone_check
  tags:
    - bots
    - apollo
    - git


- name: Clone apollo repo
  become: yes
  become_user: "{{ username }}"
  git:
    repo: "https://github.com/charlesreid1-bots/apollo-space-junk.git"
    dest: "{{ apollo_path }}"
    recursive: yes
  when:
    - "not apollo_clone_check.stat.exists"
  tags:
    - bots
    - apollo
    - git


- name: Pull apollo
  become: yes
  become_user: "{{ username }}"
  command: "git pull"
  args:
    chdir: "{{ apollo_path }}"
  when:
    - "apollo_clone_check.stat.exists"
  tags:
    - bots
    - apollo
    - git


# #####################################
# SET UP BOT KEYS


- name: "Install API keys"
  become: yes
  become_user: "{{ username }}"
  copy: 
    src: "../../../secrets/apikeys.json.enc"
    dest: "{{ apollo_path }}/bot/apikeys.json"
    decrypt: yes
  tags:
    - bots
    - apollo
    - keys

- name: "Install zipped Apollo Twitter keys"
  become: yes
  become_user: "{{ username }}"
  copy:
    src: "../../../secrets/apollo_keys.zip.enc"
    dest: "{{ apollo_path }}/bot/apollo_keys.zip"
    decrypt: yes
  tags:
    - bots
    - apollo
    - keys
    
- name: "Unzip Apollo Twitter keys"
  become: yes
  become_user: "{{ username }}"
  command: "unzip -o {{ apollo_path }}/bot/apollo_keys.zip -d {{ apollo_path }}/bot"
  tags:
    - bots
    - apollo
    - keys


# #####################################
# SET UP VIRTUALENV
# 
# Procedure:
# - install virtualenv package
# - create the virtual env dir
# - source the activate script
# - pip install requirements.txt

- name: Pip install virtualenv
  become: yes
  become_user: "{{ username }}"
  command: "/home/{{ username }}/.pyenv/shims/pip install virtualenv"
  tags:
    - bots
    - apollo
    - bot-virtualenv


- name: Create apollo virtual environment
  become: yes
  become_user: "{{ username }}"
  command: "{{ pyenv_python }} -m virtualenv -p python3.6 {{ apollo_path }}/vp"
  tags:
    - bots
    - apollo
    - bot-virtualenv


- name: Pip install apollo requirements.txt into the uptime virtual environment
  become: yes
  become_user: "{{ username }}"
  command: "{{ apollo_path }}/vp/bin/pip install -r {{ apollo_path }}/requirements.txt"
  tags:
    - bots
    - apollo
    - bot-virtualenv


# #####################################
# INSTALL STARTUP SERVICES
# 
# Check if bot startup service is installed.
# If not, install it.

- name: Check if apollo startup service is installed
  stat:
    path: /etc/systemd/system/apollo.service
  register: apollo_service_check
  tags:
    - bots
    - apollo
    - bot-services


- name: Fetch the apollo startup service jinja template
  fetch:
    src: "{{ apollo_path }}/service/apollo.service.j2"
    dest: "/tmp/apollo.service.j2"
    flat: yes
    fail_on_missing: yes
  tags:
    - bots
    - apollo
    - bot-services


- name: Install the apollo startup service file
  become: yes
  template:
    src: "/tmp/apollo.service.j2"
    dest: "/etc/systemd/system/apollo.service"
    mode: 0774
  when:
    - "not apollo_service_check.stat.exists"
  tags:
    - bots
    - apollo
    - bot-services


- name: Enable apollo startup service
  become: yes
  command: "systemctl enable apollo"
  when:
    - "apollo_service_check.stat.exists"
  tags:
    - bots
    - apollo
    - bot-services
